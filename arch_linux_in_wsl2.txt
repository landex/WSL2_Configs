<>  The configuration of WSL2+ArchLinux generated by Video from Fabio Akita Link (https://www.youtube.com/watch?v=sjrW74Hx5Po&t=1718s)

<>  We considered the pre requirements below to you procced this steps.
-> WSL2 Installed
-> Linux Kernel updated in Windows
-> Windows Terminal installed
-> VSCode Installed
-> Good Knowlodged in PowerShell
-> Good Knowlodged in Linux/Unix systems

<>  You machine minimal requirements are:
-> 16GB of RAM
-> Processors with more 4 core
-> SSD/NVME with 40GB of free space

<>  The First Steps
-> Make download of Arch in -> https://github.com/yuk7/ArchWSL/releases/download/22.2.10.0/Arch.zip
-> Uncompress folder, in your prefer folder
-> Import to WSL2, run with ADM mode
$ wsl --import archlinux C:\Users\landi\Documents\WSL C:\Users\landi\Documents\Support\arch_roofts\rootfs.tar.gz

<> Starting the wsl2 systems
-> After this raise the ArchLinux in Windows Terminal
$ wsl -d archlinux

-> The ArchLinux will be started with root mode
-> Define a root password >-> majutsu-shi
$ sudo passwd 

<> Create a non root user
-> Configure file sudoers
$ echo "%wheel ALL=(ALL) ALL" > /etc/sudoers.d/wheel

-> Now create a user >-> shinobi
$ useradd -m -G wheel -s /bin/bash arkx

-> To change password
$ sudo passwd arkx

<> Enable own user to make login by defautl in WSL2
-> By default the id of user is 1000 so run command below in powershell with adm level
$ Get-ItemProperty Registry::HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Lxss\*\ DistributionName | Where-Object -Property DistributionName -eq archlinux  | Set-ItemProperty -Name DefaultUid -Value 1000

-> If you can confirm the id, you can make login below with wsl command and check id
$ wsl -d archlinux -u arkx

-> We need discovery the id of user to change default user on win key, run comand below
$ id -u

-> Some times is necessary restart the wsl run command below
$  wsl --shutdown

<> Set up Pacman, afer make login with your user
-> Set keys and popuate
$ sudo pacman-key --init
$ sudo pacman-key --populate
$ sudo pacman -Syy archlinux-keyring

-> Install latest upgrades
$ sudo pacman -Syyuu

<> After installed all updates you can customize your terminal colors in link -> https://windowsterminalthemes.dev/

<> VSCode
-> The best code editor ever
-> To use integrated with WSL2 you need install the wget tool, run command below
$ sudo pacman -S wget

-> Now after instalation type code on terminal
$ code

<> Install the GIT
-> Git is a code version tool
$ sudo pacman -S git

<> Install the NodeJS packages
$ sudo pacman -S yarn npm

<> Install Rust
$ sudo pacman -S rust

<> C compilers
$ sudo pacman -S base-devel

<> Lunar Vim
-> Fisrt step install NeoVim
$ sudo pacman -S neovim

-> Go to github LunarVim project page -> https://github.com/LunarVim/LunarVim
-> To proced with installation run command below
$ bash <(curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh)

-> To open before add in path
$ export PATH=~/.cargo/bin/:~/.local/bin:$PATH

<> YAY - Yet Another Yogurt, other package manager to Arch
-> Make a clone of project in tmp folder
$ git clone https://aur.archlinux.org/yay.git

-> After clonning the project run commands to install
$ cd yay
$ makepkg -si

-> After installe yay we not need more the pacman

<> The SHELL
-> Install zsh - The ZSHELL for me

$ yay -S zsh

<> Powerlevel10K 
-> To more deatils verify the GitHub page >-> https://github.com/romkatv/powerlevel10k
-> Now we will increment our zshell
-> Install Powerlevel10K
$ yay -S --noconfirm zsh-theme-powerlevel10k-git

-> Run command to add powerlevel10k
$ echo 'source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
### OPTIONAL ###

-> Change SHELL
$ sudo chsh -s /usr/bin/zsh

-> If not work command above edit passwd file
$ sudo vim /etc/passwd

-> Configure env variables to run lvim
-> Add this line in end of .zshrc file
export PATH=~/.cargo/bin/:~/.local/bin:$PATH

-> Close and open terminal again to effect this changes

<> Auto suggestions
-> This is a feature very common in fish shell, now we will use in our zsh
-> More details of this project in this page >-> https://github.com/zsh-users/zsh-autosuggestions
-> Run command below:
$ git clone https://github.com/zsh-users/zsh-autosuggestions

-> Add this line in your .zshrc
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

<> Zsh syntax highlighting
-> Run command to clone syntax highlighting feature
$ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git

-> Add this line in you .zshrc
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

<> Working with multiples languages
-> ASDF is best tool to you control the version of softwares
-> To install in Arch, run command
$ yay -S asdf-vm

-> The installation will be done in path /opt/asdf-vm
-> To loa the asdf, you can add the path in your .zshrc file 
source /opt/asdf-vm/asdf.sh

-> After this re-load you terminal
-> Run command below to list plugins installed
$ asdf list

-> To install a python plugin run command below
$ asdf plugin add python

-> To list all python versions avaiable
$ asdf list-all python

-> To install last version of python
-> When I run this command the last version is 3.10.4
-> Run command to install
$ asdf install python 3.10.4

-> You can set up a loca version to determined codes in specified folder
-> Example to dir you tipe command below
$ asdf local python 3.10.4

-> With the command above, only in these folder the code will be run with version 3.10.4
-> This tool is very good if you work with lot of versions

<> Docker
-> What is Docker?
-> Installing docker from binaries
-> First make download from this link https://download.docker.com/linux/static/stable/x86_64/docker-20.10.9.tgz (this link belong last version that I was created this guide)
-> Use the wget command to make download
$ wget https://download.docker.com/linux/static/stable/x86_64/docker-20.10.9.tgz

-> Uncompress the file
$ tar xzvf docker-20.10.9.tgz

-> Now make copy below
$ sudo cp docker/* /usr/bin/

-> To start docker, run command below
$ dockerd &

<> Extras things
-> History file
-> Create the history file in own .zsh path
$ touch .zhistory

-> Some times is necessary give permission to histfile
$ chown user:group $HISTFILE

-> Enable vi mode
-> In you .zshrc add this configuration

bindkey -v
export KEYTIMEOUT=1











### MANUAL CONFIGURATION ###

-> To manual configuration of ZSHELL, firt we create a folder on ~(home)
mkdir ~/.zshell

-> Configure ~/.zshenv -> Tha define the main variables to use ZSHELL
touch .zshenv

-> The configuration that we will inseted in .zshenv
Se this link to more details -> https://thevaluable.dev/zsh-install-configure-mouseless/

-> In out folde ~/.zshell - create an empty file .zshrc
touhc .zshrc

See this link to some configuration in .zshrc -> https://github.com/Phantas0s/.dotfiles/blob/master/zsh/zshrc
And this link to some aliases -> https://github.com/Phantas0s/.dotfiles/blob/master/aliases/aliases

-> Autocompleted
-> In ouwn zhell folder -> /home/username/.zshell

-> Clone the project to folder
git clone https://github.com/zsh-users/zsh-autosuggestions